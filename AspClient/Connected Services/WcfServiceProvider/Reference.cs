//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AspClient.WcfServiceProvider {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/PersonWcfService.Models")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceProvider.IPerson")]
    public interface IPerson {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/CreatePerson", ReplyAction="http://tempuri.org/IPerson/CreatePersonResponse")]
        void CreatePerson(string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/CreatePerson", ReplyAction="http://tempuri.org/IPerson/CreatePersonResponse")]
        System.Threading.Tasks.Task CreatePersonAsync(string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPersonById", ReplyAction="http://tempuri.org/IPerson/GetPersonByIdResponse")]
        AspClient.WcfServiceProvider.Person GetPersonById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPersonById", ReplyAction="http://tempuri.org/IPerson/GetPersonByIdResponse")]
        System.Threading.Tasks.Task<AspClient.WcfServiceProvider.Person> GetPersonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetAllPersons", ReplyAction="http://tempuri.org/IPerson/GetAllPersonsResponse")]
        AspClient.WcfServiceProvider.Person[] GetAllPersons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetAllPersons", ReplyAction="http://tempuri.org/IPerson/GetAllPersonsResponse")]
        System.Threading.Tasks.Task<AspClient.WcfServiceProvider.Person[]> GetAllPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/DeletePerson", ReplyAction="http://tempuri.org/IPerson/DeletePersonResponse")]
        void DeletePerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/DeletePerson", ReplyAction="http://tempuri.org/IPerson/DeletePersonResponse")]
        System.Threading.Tasks.Task DeletePersonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/UpdatePerson", ReplyAction="http://tempuri.org/IPerson/UpdatePersonResponse")]
        void UpdatePerson(int id, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/UpdatePerson", ReplyAction="http://tempuri.org/IPerson/UpdatePersonResponse")]
        System.Threading.Tasks.Task UpdatePersonAsync(int id, string FirstName, string LastName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonChannel : AspClient.WcfServiceProvider.IPerson, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonClient : System.ServiceModel.ClientBase<AspClient.WcfServiceProvider.IPerson>, AspClient.WcfServiceProvider.IPerson {
        
        public PersonClient() {
        }
        
        public PersonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreatePerson(string FirstName, string LastName) {
            base.Channel.CreatePerson(FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task CreatePersonAsync(string FirstName, string LastName) {
            return base.Channel.CreatePersonAsync(FirstName, LastName);
        }
        
        public AspClient.WcfServiceProvider.Person GetPersonById(int id) {
            return base.Channel.GetPersonById(id);
        }
        
        public System.Threading.Tasks.Task<AspClient.WcfServiceProvider.Person> GetPersonByIdAsync(int id) {
            return base.Channel.GetPersonByIdAsync(id);
        }
        
        public AspClient.WcfServiceProvider.Person[] GetAllPersons() {
            return base.Channel.GetAllPersons();
        }
        
        public System.Threading.Tasks.Task<AspClient.WcfServiceProvider.Person[]> GetAllPersonsAsync() {
            return base.Channel.GetAllPersonsAsync();
        }
        
        public void DeletePerson(int id) {
            base.Channel.DeletePerson(id);
        }
        
        public System.Threading.Tasks.Task DeletePersonAsync(int id) {
            return base.Channel.DeletePersonAsync(id);
        }
        
        public void UpdatePerson(int id, string FirstName, string LastName) {
            base.Channel.UpdatePerson(id, FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task UpdatePersonAsync(int id, string FirstName, string LastName) {
            return base.Channel.UpdatePersonAsync(id, FirstName, LastName);
        }
    }
}
